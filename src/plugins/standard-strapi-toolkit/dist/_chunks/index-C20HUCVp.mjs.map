{"version":3,"file":"index-C20HUCVp.mjs","sources":["../../admin/src/pluginId.ts","../../admin/src/components/Initializer.tsx","../../admin/src/components/PluginIcon.tsx","../../admin/src/fields/multi-select/field-id.ts","../../admin/src/fields/multi-select/icon.tsx","../../admin/src/utils/getTranslation.ts","../../admin/src/fields/multi-select/register-admin.ts","../../lib/custom-fields.ts","../../admin/src/fields/simple-tags/icon.tsx","../../admin/src/fields/simple-tags/register-admin.ts","../../admin/src/fields/multi-tags/icon.tsx","../../admin/src/fields/multi-tags/register-admin.ts","../../admin/src/index.ts"],"sourcesContent":["export const PLUGIN_ID = 'standard-strapi-toolkit';\r\n","import { useEffect, useRef } from 'react';\r\n\r\nimport { PLUGIN_ID } from '../pluginId';\r\n\r\ntype InitializerProps = {\r\n  setPlugin: (id: string) => void;\r\n};\r\n\r\nconst Initializer = ({ setPlugin }: InitializerProps) => {\r\n  const ref = useRef(setPlugin);\r\n\r\n  useEffect(() => {\r\n    ref.current(PLUGIN_ID);\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport { Initializer };\r\n","import { PuzzlePiece } from '@strapi/icons';\r\n\r\nconst PluginIcon = () => <PuzzlePiece />;\r\n\r\nexport { PluginIcon };\r\n","export const FIELD_ID = 'multi-select';\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@strapi/design-system'\r\nimport { Check as CheckIcon } from '@strapi/icons'\r\n\r\nconst IconBox = styled(Flex)`\r\n  background-color: #f0f0ff; /* primary100 */\r\n  border: 1px solid #d9d8ff; /* primary200 */\r\n\r\n  svg > path {\r\n    fill: #4945ff; /* primary600 */\r\n  }\r\n`\r\n\r\nconst Icon: React.FC = () => {\r\n  return (\r\n    <IconBox\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      width={7}\r\n      height={6}\r\n      hasRadius\r\n      aria-hidden>\r\n      <CheckIcon />\r\n    </IconBox>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","import { PLUGIN_ID } from '../pluginId';\r\n\r\nconst getTranslation = (id: string) => `${PLUGIN_ID}.${id}`;\r\n\r\nexport { getTranslation };\r\n","import { FIELD_ID } from './field-id';\r\nimport Icon from './icon';\r\nimport { getTranslation } from '../../utils/getTranslation';\r\n\r\nexport default {\r\n  name: FIELD_ID,\r\n  type: 'json',\r\n  icon: Icon,\r\n  intlLabel: {\r\n    id: getTranslation('multi-select.label'),\r\n    defaultMessage: 'Multi Select',\r\n  },\r\n  intlDescription: {\r\n    id: getTranslation('multi-select.description'),\r\n    defaultMessage: 'Select multiple options from a list',\r\n  },\r\n  components: {\r\n    Input: async () => import('./input'),\r\n  },\r\n  options: {\r\n    base: [\r\n      {\r\n        sectionTitle: null,\r\n        items: [\r\n          {\r\n            name: 'options',\r\n            type: 'textarea-enum',\r\n            intlLabel: {\r\n              id: getTranslation('multi-select.enum.label'),\r\n              defaultMessage: 'Options (one per line)',\r\n            },\r\n            description: {\r\n              id: getTranslation('multi-select.enum.description'),\r\n              defaultMessage:\r\n                'Enter one option per line. You can also add a value and a label separated by a colon (e.g. \"label:value\").\\nIf no value is provided, the label will be used as the value',\r\n            },\r\n            placeholder: {\r\n              id: getTranslation('multi-select.enum.placeholder'),\r\n              defaultMessage: 'Ex:\\nOption 1\\nOption 2\\nOption 3:option-3',\r\n            },\r\n          },\r\n          {\r\n            name: 'default',\r\n            type: 'json',\r\n            intlLabel: {\r\n              id: getTranslation('multi-select.default.label'),\r\n              defaultMessage: 'Default value',\r\n            },\r\n            description: {\r\n              id: getTranslation('multi-select.default.description'),\r\n              defaultMessage:\r\n                'Set the default value of the field in JSON format, be careful with the syntax, ex: [\"value-1\", \"value-2\"]',\r\n            },\r\n            defaultValue: '[]',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    advanced: [\r\n      {\r\n        sectionTitle: {\r\n          id: 'global.settings',\r\n          defaultMessage: 'Settings',\r\n        },\r\n        items: [\r\n          {\r\n            name: 'required',\r\n            type: 'checkbox',\r\n            intlLabel: {\r\n              id: 'multi-select.settings.requiredField',\r\n              defaultMessage: 'Required field',\r\n            },\r\n            description: {\r\n              id: 'multi-select.settings.requiredField.description',\r\n              defaultMessage: \"You won't be able to create an entry if this field is empty\",\r\n            },\r\n          },\r\n          {\r\n            name: 'private',\r\n            type: 'checkbox',\r\n            intlLabel: {\r\n              id: 'multi-select.settings.private',\r\n              defaultMessage: 'Private field',\r\n            },\r\n            description: {\r\n              id: 'multi-select.settings.private.description',\r\n              defaultMessage: 'This field will not show up in the API response',\r\n            },\r\n          },\r\n          {\r\n            name: 'min',\r\n            type: 'number',\r\n            intlLabel: {\r\n              id: 'multi-select.settings.minLength',\r\n              defaultMessage: 'Minimum items',\r\n            },\r\n            description: {\r\n              id: 'multi-select.settings.minLength.description',\r\n              defaultMessage: 'The minimum number of items allowed (visual feedback only, cannot be enforced)',\r\n            },\r\n          },\r\n          {\r\n            name: 'max',\r\n            type: 'number',\r\n            intlLabel: {\r\n              id: 'multi-select.settings.maxLength',\r\n              defaultMessage: 'Maximum items',\r\n            },\r\n            description: {\r\n              id: 'multi-select.settings.maxLength.description',\r\n              defaultMessage: 'The maximum number of items allowed (client-side enforcement only)',\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n}","export const CUSTOM_FIELDS_IDS_MAP = {\r\n  simple_tags: 'simple-tags',\r\n  multi_tags: 'multi-tags',\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@strapi/design-system'\r\nimport { BulletList } from '@strapi/icons'\r\n\r\n\r\nconst IconBox = styled(Flex)`\r\n  background-color: #f0f0ff; /* primary100 */\r\n  border: 1px solid #d9d8ff; /* primary200 */\r\n\r\n  svg > path {\r\n    fill: #4945ff; /* primary600 */\r\n  }\r\n`\r\n\r\nconst Icon: React.FC = () => {\r\n  return (\r\n    <IconBox hasRadius>\r\n      <BulletList />\r\n    </IconBox>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","import { PLUGIN_ID } from '../../pluginId';\r\nimport { CUSTOM_FIELDS_IDS_MAP } from '../../../../lib/custom-fields';\r\nimport Icon from './icon';\r\n\r\n\r\nexport const FIELD_ID = CUSTOM_FIELDS_IDS_MAP['simple_tags'];\r\n\r\nexport default {\r\n  name: FIELD_ID,\r\n  type: 'json',\r\n  intlLabel: {\r\n    id: `${PLUGIN_ID}.${FIELD_ID}.label`,\r\n    defaultMessage: 'Simple Tags',\r\n  },\r\n  intlDescription: {\r\n    id: `${PLUGIN_ID}.${FIELD_ID}.description`,\r\n    defaultMessage: 'A flat list of custom text tags. Example: [\"summer\", \"sale\"]',\r\n  },\r\n  icon: Icon,\r\n  components: {\r\n    Input: async () => import('./input'),\r\n  },\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@strapi/design-system'\r\nimport { GridFour } from '@strapi/icons'\r\n\r\n\r\nconst IconBox = styled(Flex)`\r\n  background-color: #f0f0ff; /* primary100 */\r\n  border: 1px solid #d9d8ff; /* primary200 */\r\n\r\n  svg > path {\r\n    fill: #4945ff; /* primary600 */\r\n  }\r\n`\r\n\r\nconst Icon: React.FC = () => {\r\n  return (\r\n    <IconBox hasRadius>\r\n      <GridFour />\r\n    </IconBox>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","import { PLUGIN_ID } from '../../pluginId';\r\nimport { CUSTOM_FIELDS_IDS_MAP } from '../../../../lib/custom-fields';\r\nimport Icon from './icon';\r\n\r\n\r\nexport const FIELD_ID = CUSTOM_FIELDS_IDS_MAP['multi_tags'];\r\n\r\nexport default {\r\n  name: FIELD_ID,\r\n  type: 'json',\r\n  intlLabel: {\r\n    id: `${PLUGIN_ID}.${FIELD_ID}.label`,\r\n    defaultMessage: 'Text Matrix',\r\n  },\r\n  intlDescription: {\r\n    id: `${PLUGIN_ID}.${FIELD_ID}.description`,\r\n    defaultMessage: 'A nested list (2D array) of grouped tags. Example: [[\"red\", \"blue\"], [\"S\", \"M\", \"L\"]]',\r\n  },\r\n  icon: Icon,\r\n  components: {\r\n    Input: async () => import('./input'),\r\n  },\r\n}","import { PLUGIN_ID } from './pluginId';\r\nimport { Initializer } from './components/Initializer';\r\nimport { PluginIcon } from './components/PluginIcon';\r\nimport multiSelectRegisterAdmin from './fields/multi-select/register-admin';\r\nimport simpleTagsRegisterAdmin from './fields/simple-tags/register-admin';\r\nimport multiTagsRegisterAdmin from './fields/multi-tags/register-admin';\r\n\r\nexport default {\r\n  register(app: any) {\r\n    app.addMenuLink({\r\n      to: `plugins/${PLUGIN_ID}`,\r\n      icon: PluginIcon,\r\n      intlLabel: {\r\n        id: `${PLUGIN_ID}.plugin.name`,\r\n        defaultMessage: PLUGIN_ID,\r\n      },\r\n      Component: async () => {\r\n        const { App } = await import('./pages/App');\r\n\r\n        return App;\r\n      },\r\n    });\r\n\r\n    app.customFields.register({\r\n      pluginId: PLUGIN_ID,\r\n      ...multiSelectRegisterAdmin,\r\n    });\r\n\r\n    app.customFields.register({\r\n      pluginId: PLUGIN_ID,\r\n      ...simpleTagsRegisterAdmin,\r\n    });\r\n\r\n    app.customFields.register({\r\n      pluginId: PLUGIN_ID,\r\n      ...multiTagsRegisterAdmin,\r\n    });\r\n\r\n    app.registerPlugin({\r\n      id: PLUGIN_ID,\r\n      initializer: Initializer,\r\n      isReady: false,\r\n      name: PLUGIN_ID,\r\n    });\r\n  },\r\n\r\n  async registerTrads({ locales }: { locales: string[] }) {\r\n    return Promise.all(\r\n      locales.map(async (locale) => {\r\n        try {\r\n          const { default: data } = await import(`./translations/${locale}.json`);\r\n\r\n          return { data, locale };\r\n        } catch {\r\n          return { data: {}, locale };\r\n        }\r\n      })\r\n    );\r\n  },\r\n};\r\n"],"names":["FIELD_ID","IconBox","Icon","CheckIcon"],"mappings":"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"}