{"version":3,"file":"input-B1N-tHVV.mjs","sources":["../../admin/src/fields/simple-tags/input.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Field, Flex } from '@strapi/design-system';\r\nimport { useField } from '@strapi/strapi/admin';\r\nimport { useIntl } from 'react-intl';\r\nimport { TagView } from '../../components/tag-view';\r\nimport { TagInput } from '../../components/tag-input';\r\n\r\n\r\ntype InputValue = string;\r\n\r\ninterface Props {\r\n  label: string;\r\n  name: string;\r\n  intlLabel: { id: string; defaultMessage: string };\r\n  attribute: { type: string };\r\n}\r\n\r\nconst SimpleTags: React.FC<Props> = ({ label, name, intlLabel, attribute }) => {\r\n  const { formatMessage } = useIntl();\r\n  const { onChange, value = [], error } = useField(name);\r\n\r\n\r\n  const updateValue = (newValue: InputValue[]) => {\r\n    onChange({ target: { name, value: newValue, type: attribute.type } } as any);\r\n  }\r\n\r\n  const handleAdd = (input: InputValue) => {\r\n    const trimmed = input.trim();\r\n    if (trimmed && !value.includes(trimmed)) {\r\n      updateValue([...value, trimmed]);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (tag: InputValue) => {\r\n    updateValue(value.filter((x: InputValue) => x !== tag));\r\n  };\r\n\r\n\r\n  return (\r\n    <Field.Root\r\n      id={name}\r\n      name={name}\r\n      error={error}\r\n    >\r\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={1}>\r\n        <Field.Label>{intlLabel?.id ? formatMessage(intlLabel) : label}</Field.Label>\r\n        <TagInput onAdd={handleAdd} />\r\n        <Field.Hint />\r\n        <Field.Error />\r\n      </Flex>\r\n      <Flex gap={1}>\r\n        {value.map((tag: InputValue) => (\r\n          <TagView key={tag} text={tag} onRemove={() => handleRemove(tag)} />\r\n        ))}\r\n      </Flex>\r\n    </Field.Root>\r\n  );\r\n};\r\n\r\nexport default SimpleTags;\r\n"],"names":[],"mappings":";;;;;AAiBA,MAAM,aAA8B,CAAC,EAAE,OAAO,MAAM,WAAW,gBAAgB;AAC7E,QAAM,EAAE,cAAA,IAAkB,QAAA;AAC1B,QAAM,EAAE,UAAU,QAAQ,CAAA,GAAI,MAAA,IAAU,SAAS,IAAI;AAGrD,QAAM,cAAc,CAAC,aAA2B;AAC9C,aAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,UAAU,MAAM,UAAU,KAAA,GAAe;AAAA,EAC7E;AAEA,QAAM,YAAY,CAAC,UAAsB;AACvC,UAAM,UAAU,MAAM,KAAA;AACtB,QAAI,WAAW,CAAC,MAAM,SAAS,OAAO,GAAG;AACvC,kBAAY,CAAC,GAAG,OAAO,OAAO,CAAC;AAAA,IACjC;AAAA,EACF;AAEA,QAAM,eAAe,CAAC,QAAoB;AACxC,gBAAY,MAAM,OAAO,CAAC,MAAkB,MAAM,GAAG,CAAC;AAAA,EACxD;AAGA,SACE;AAAA,IAAC,MAAM;AAAA,IAAN;AAAA,MACC,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MAEA,UAAA;AAAA,QAAA,qBAAC,QAAK,WAAU,UAAS,YAAW,WAAU,KAAK,GACjD,UAAA;AAAA,UAAA,oBAAC,MAAM,OAAN,EAAa,UAAA,WAAW,KAAK,cAAc,SAAS,IAAI,OAAM;AAAA,UAC/D,oBAAC,UAAA,EAAS,OAAO,UAAA,CAAW;AAAA,UAC5B,oBAAC,MAAM,MAAN,EAAW;AAAA,UACZ,oBAAC,MAAM,OAAN,CAAA,CAAY;AAAA,QAAA,GACf;AAAA,4BACC,MAAA,EAAK,KAAK,GACR,UAAA,MAAM,IAAI,CAAC,QACV,oBAAC,WAAkB,MAAM,KAAK,UAAU,MAAM,aAAa,GAAG,EAAA,GAAhD,GAAmD,CAClE,EAAA,CACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGN;"}