{"version":3,"file":"input-D432vG8N.js","sources":["../../admin/src/fields/multi-tags/input.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Field, Flex, Button, Divider } from \"@strapi/design-system\";\r\nimport { Plus, Trash } from \"@strapi/icons\";\r\nimport { useField } from \"@strapi/strapi/admin\";\r\nimport { useIntl } from \"react-intl\";\r\n// import { TagInput } from \"../../components/tag-input\";\r\nimport { TagInput } from \"../../components/tag-input\";\r\nimport { TagView } from \"../../components/tag-view\";\r\n\r\n\r\n\r\ntype InputType = string;\r\n\r\ninterface RowTagsInputProps {\r\n  label: string;\r\n  name: string;\r\n  intlLabel: { id: string; defaultMessage: string };\r\n  description?: { id: string; defaultMessage: string };\r\n  attribute: { type: string };\r\n}\r\n\r\nconst RowTagsInput: React.FC<RowTagsInputProps> = ({ label, name, intlLabel, description, attribute }) => {\r\n  const { formatMessage } = useIntl();\r\n  const { onChange, value = [[]], error } = useField<InputType[][]>(name);\r\n\r\n\r\n  const updateValue = (newValue: any) => {\r\n    onChange({ target: { name, value: newValue, type: attribute.type } } as any);\r\n  }\r\n\r\n  const handleAddTag = (rowIndex: number, tag: InputType) => {\r\n    const trimmed = tag.trim();\r\n    if (trimmed) {\r\n      const newValue = [...value];\r\n      if (!newValue[rowIndex]) newValue[rowIndex] = [];\r\n      if (!newValue[rowIndex].includes(trimmed)) {\r\n        newValue[rowIndex] = [...newValue[rowIndex], trimmed];\r\n        updateValue(newValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (rowIndex: number, tag: InputType) => {\r\n    const newValue = [...value];\r\n    newValue[rowIndex] = newValue[rowIndex].filter((t) => t !== tag);\r\n    updateValue(newValue);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    updateValue([...value, []]);\r\n  };\r\n\r\n  const handleRemoveRow = (rowIndex: number) => {\r\n    const newValue = value.filter((_, i) => i !== rowIndex);\r\n    updateValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <Field.Root\r\n      id={name}\r\n      name={name}\r\n      hint={description?.defaultMessage}\r\n      error={error}\r\n    >\r\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n        <Field.Label>{intlLabel?.id ? formatMessage(intlLabel) : label}</Field.Label>\r\n\r\n        {value.map((row, rowIndex) => (\r\n          <Flex key={rowIndex} direction=\"column\" gap={1}>\r\n            {rowIndex > 0 && (<Divider style={{ width: '100%' }} />)}\r\n            <Flex direction=\"row\" gap={2} style={{ width: '100%' }}>\r\n              <Box style={{ width: '100%' }}>\r\n                <TagInput onAdd={(val: string) => handleAddTag(rowIndex, val)} />\r\n              </Box>\r\n              <Button\r\n                variant=\"danger-light\"\r\n                onClick={() => handleRemoveRow(rowIndex)}\r\n              >\r\n                <Trash />\r\n              </Button>\r\n            </Flex>\r\n            <Box style={{ width: '100%' }}>\r\n              <Flex gap={1} wrap=\"wrap\">\r\n                {row.map((tag, tagIndex) => (\r\n                  <TagView key={tagIndex} text={tag} onRemove={() => handleRemoveTag(rowIndex, tag)} />\r\n                ))}\r\n              </Flex>\r\n            </Box>\r\n          </Flex>\r\n        ))}\r\n\r\n        <Flex>\r\n          <Button\r\n            variant=\"secondary\"\r\n            startIcon={<Plus />}\r\n            onClick={handleAddRow}\r\n            fullWidth\r\n          >\r\n            Add Row\r\n          </Button>\r\n        </Flex>\r\n        <Field.Hint />\r\n        <Field.Error />\r\n      </Flex>\r\n    </Field.Root>\r\n  );\r\n};\r\n\r\nexport default RowTagsInput;\r\n"],"names":["useIntl","useField","jsx","Field","Flex","Divider","jsxs","Box","TagInput","Button","Trash","TagView","Plus"],"mappings":"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"}